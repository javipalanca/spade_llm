name: Build and Deploy Documentation

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'docs/**'
      - 'spade_llm/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'spade_llm/**'
      - '.github/workflows/docs.yml'
  # Allow manual trigger from GitHub UI
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('docs/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install -e .
          pip install --upgrade mkdocs-material

      - name: Configure Git for mkdocs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build documentation
        run: |
          cd docs
          mkdocs build --strict
        env:
          # Set environment variables that might be needed for doc generation
          PYTHONPATH: ${{ github.workspace }}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/site

  # Deploy job (main branch - production)
  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Deploy job (dev branch - development docs)
  deploy-development:
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./artifact

      - name: Extract artifact
        run: |
          mkdir -p docs-site
          cd artifact
          tar -xf artifact.tar
          cp -r * ../docs-site/ || cp -r . ../docs-site/
          cd ..
          rm -rf artifact

      - name: Deploy to GitHub Pages (Dev)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs-site
          destination_dir: dev
          cname: false
          allow_empty_commit: true
          keep_files: true

  # Check job for PRs (build only, no deploy)
  check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check documentation build
        run: echo "Documentation build successful ✅"

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Documentation build successful! The docs will be updated when this PR is merged.'
            })
